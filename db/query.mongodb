use ('db_alquileres_mongo')
db.createCollection("usuario",{
    capped: true,
    size : 690, 
    max : 5,
    validator: {
        $jsonSchema: {
          bsonType: 'object',
          additionalProperties: false,
          required: ['cc', 'nombre', 'edad'],
          properties: {
            _id:{
                bsonType: 'objectId',
            },
            cc:{
                bsonType: "string",
                description: '{"status": "402", "message": "La cedula_usuario es obligatorio y debe ser numerica"}',
                pattern:"^[0-9]+$"
            },
            nombre: { 
                // https://www.mongodb.com/docs/atlas/app-services/schemas/types/#std-label-schema-type-string
                bsonType: 'string',
                description: '{"status": "402", "message": "El nombre_usuario es obligatorio y solo resive letras"}' ,
                pattern: "^[a-zA-Z ]+$"
            },
            apellido: { 
                bsonType: 'string',
                description: 'El apellido debe ser un string',
                pattern: "^[a-zA-Z ]+$"
            },
            edad: { 
                bsonType: 'int',
                description: '{"status": "402", "message": "La edad_usuario es obligatorio y debe ser numerica"}',
                pattern:"^[0-9]+$"
            },
            email: {
                bsonType: 'string',
                description: 'El email no es obligatorio ni opcional pero se acepta el dato ',
                pattern: "^[a-zA-Z0-9.]+@"
            },
            apodo: {
                bsonType: 'string',
                description: 'El apodo no es obligatorio ni opcional pero se acepta el dato'
            }

          }
          
        }
    }
});

use("db_alquileres_mongo");
db.usuario.insertMany([
    {
        "cc": "123456",
        "nombre": "Jonathan david",
        "apellido": "Alvarez Monsalve",
        "edad": 19

    },
    {   
        "cc" : "5645231",
        "nombre": "juan ",
        "apellido" : "ramirez",
        "edad" : 17
    },
    {   
        "cc" : "789654",
        "nombre": "apolo",
        "apellido" : "apolo",
        "edad" : 80
    }
])

use("db_alquileres_mongo");
db.createCollection('cliente', {
    capped: true,
    size: 2000,
    max: 8,
    validator: {
        $jsonSchema: {
            bsonType: 'object',
            additionalProperties: false,
            required: ['ID', 'Nombre', 'Apellido','DNI', 'Direccion', 'Telefono'],
            properties: {
                _id: {
                    bsonType: 'objectId',
                    description: 'El parametro _id es obligatorio'
                },
                ID: {
                    bsonType: 'int',
                    description: '{"status": "402", "message": "el id es obligatorio y debe ser numerico"}'
                },
                Nombre: {
                    bsonType: 'string',
                    description: '{"status": "402", "message": "El nombre es obligatorio y solo resive letras"}' ,
                    pattern: "^[a-zA-Z ]+$"
                },
                Apellido: {
                    bsonType: 'string',
                    description: '{"status": "402", "message": "El apellido es obligatorio y solo resive letras"}' ,
                    pattern: "^[a-zA-Z ]+$"
                },
                DNI: {
                    bsonType: 'string',
                    description: '{"status": "402", "message": "La dni es obligatorio y debe ser string"}'
                },
                Direccion: {
                    bsonType: 'string',
                    description: '{"status": "402", "message": "La direccion es obligatoria y debe ser string"}'
                },
                Telefono: {
                    bsonType: 'string',
                    description: '{"status": "402", "message": "El telefono es obligatorio y debe ser string"}'
                },
                Email: {
                    bsonType: 'string',
                    description: 'El parametro Email no es obligatorio pero es permitible'
                }
            },
        },
    }
});

use("db_alquileres_mongo");
db.cliente.insertMany([
    { 
        ID: 1,
        Nombre: 'Juan',
        Apellido: 'Perez',
        DNI: '12345678',
        Direccion: 'Calle 123',
        Telefono: '11111111', 
        Email: 'juan@example.com'},
    {
        ID: 2, 
        Nombre: 'Maria', 
        Apellido: 'Lopez', 
        DNI: '87654321', 
        Direccion: 'Avenida 456', 
        Telefono: '22222222', 
        Email: 'maria@example.com'},
    { 
        ID: 3, 
        Nombre: 'Pedro', 
        Apellido: 'Gonzalez', 
        DNI: '56789012', 
        Direccion: 'Plaza 789', 
        Telefono: '33333333', 
        Email: 'pedro@example.com'},
    { 
        ID: 4, 
        Nombre: 'Laura', 
        Apellido: 'Martinez', 
        DNI: '09876543', 
        Direccion: 'Ruta 101', 
        Telefono: '44444444', 
        Email: 'laura@example.com'},
    { 
        ID: 5, 
        Nombre: 'Carlos', 
        Apellido: 'Gomez', 
        DNI: '43210987', 
        Direccion: 'Calle 987', 
        Telefono: '55555555', 
        Email: 'carlos@example.com'}
]);

use("db_alquileres_mongo");
db.createCollection('empleado', {
    capped: true,
    size: 2000,
    max: 8,
    validator: {
        $jsonSchema: {
            bsonType: 'object',
            additionalProperties: false,
            required: ['ID', 'Nombre', 'Apellido','DNI', 'Direccion', 'Telefono', 'cargo'],
            properties: {
                _id: {
                    bsonType: 'objectId',
                    description: 'El parametro _id es obligatorio'
                },
                ID: {
                    bsonType: 'int',
                    description: 'El parametro ID es obligatorio'
                },
                Nombre: {
                    bsonType: 'string',
                    description: 'El parametro nombre es obligatorio'
                },
                Apellido: {
                    bsonType: 'string',
                    description: 'El parametro apellido es obligatorio'
                },
                DNI: {
                    bsonType: 'string',
                    description: 'El parametro DNI es obligatorio'
                },
                Direccion: {
                    bsonType: 'string',
                    description: 'El parametro Direccion es obligatorio'
                },
                Telefono: {
                    bsonType: 'string',
                    description: 'El parametro Telefono es obligatorio'
                },
                cargo: {
                    bsonType: 'string',
                    description: 'El parametro cargo no es obligatorio pero es permitible'
                }
            },
        },
    }
});

use("db_alquileres_mongo");
db.empleado.insertMany([
    { 
        ID: 1,
        Nombre: 'juan diego',
        Apellido: 'Perez',
        DNI: '12345678',
        Direccion: 'Calle 123',
        Telefono: '11111111', 
        cargo: 'vendedor'},
    {
        ID: 2, 
        Nombre: 'manuel', 
        Apellido: 'laborde', 
        DNI: '87654321', 
        Direccion: 'Avenida 456', 
        Telefono: '22222222', 
        cargo: 'vendedor'},
    { 
        ID: 3, 
        Nombre: 'marlon', 
        Apellido: 'Gonzalez', 
        DNI: '56789012', 
        Direccion: 'Plaza 789', 
        Telefono: '33333333', 
        cargo: 'Gerente'},
    { 
        ID: 4, 
        Nombre: 'michelle', 
        Apellido: 'Martinez', 
        DNI: '09876543', 
        Direccion: 'Ruta 101', 
        Telefono: '44444444', 
        cargo: 'vendedor'},
    { 
        ID: 5, 
        Nombre: 'efrain', 
        Apellido: 'Gomez', 
        DNI: '43210987', 
        Direccion: 'Calle 987', 
        Telefono: '55555555', 
        cargo: 'Asistente'}
]);

use("db_alquileres_mongo");
db.createCollection('automovil', {
    capped: true,
    size: 1800,
    max: 8,
    validator: {
        $jsonSchema: {
            bsonType: 'object',
            additionalProperties: false,
            required: ['ID', 'Marca', 'Modelo','Anio', 'Tipo', 'Capacidad', 'Precio_Diario'],
            properties: {
                _id: {
                    bsonType: 'objectId',
                    description: 'El parametro _id es obligatorio'
                },
                ID: {
                    bsonType: 'int',
                    description: 'El parametro ID es obligatorio'
                },
                Marca: {
                    bsonType: 'string',
                    description: 'El parametro Marca es obligatorio'
                },
                Modelo: {
                    bsonType: 'string',
                    description: 'El parametro Modelo es obligatorio'
                },
                Anio: {
                    bsonType: 'number',
                    description: 'El parametro Anio es obligatorio'
                },
                Tipo: {
                    bsonType: 'string',
                    description: 'El parametro Tipo es obligatorio'
                },
                Capacidad: {
                    bsonType: 'number',
                    description: 'El parametro Capacidad es obligatorio'
                },
                Precio_Diario: {
                    bsonType: 'number',
                    description: 'El parametro Precio_Diario es obligatorio'
                }
            },
        },
    }
});
use("db_alquileres_mongo");
db.automovil.insertMany([
    { 
        ID: 1, 
        Marca: 'Toyota', 
        Modelo: 'Corolla', 
        Anio: 2021, 
        Tipo: 'Sedan', 
        Capacidad: 5, 
        Precio_Diario: 50.00},
    { 
        ID: 2, 
        Marca: 'Honda', 
        Modelo: 'Civic',
        Anio: 2020, 
        Tipo: 'Sedan', 
        Capacidad: 5, 
        Precio_Diario: 45.00},
    { 
        ID: 3, 
        Marca: 'Ford', 
        Modelo: 'Explorer', 
        Anio: 2019, 
        Tipo: 'SUV', 
        Capacidad: 7, 
        Precio_Diario: 60.00},
    { 
        ID: 4, 
        Marca: 'Chevrolet', 
        Modelo: 'Equinox', 
        Anio: 2022, 
        Tipo: 'SUV', 
        Capacidad: 5, 
        Precio_Diario: 55.00},
    { 
        ID: 5, 
        Marca: 'Nissan', 
        Modelo: 'Sentra', 
        Anio: 2022, 
        Tipo: 'Sedan', 
        Capacidad: 4, 
        Precio_Diario: 48.00}
]);

use("db_alquileres_mongo");
db.createCollection('sucursal' , {
    capped: true,
    size: 2000,
    max: 8,
    validator: {
        $jsonSchema: {
            bsonType: 'object',
            additionalProperties: false,
            required: ['ID', 'Nombre', 'Direccion','Telefono'],
            properties: {
                _id: {
                    bsonType: 'objectId',
                    description: 'El parametro _id es obligatorio'
                },
                ID: {
                    bsonType: 'int',
                    description: 'El parametro ID es obligatorio'
                },
                Nombre: {
                    bsonType: 'string',
                    description: 'El parametro Nombre es obligatorio'
                },
                Direccion: {
                    bsonType: 'string',
                    description: 'El parametro Direccion es obligatorio'
                },
                Telefono: {
                    bsonType: 'string',
                    description: 'El parametro Telefono es obligatorio'
                },
                ID_Sucursal: {
                    bsonType: 'int',
                    description: 'El parametro ID_Sucursal es obligatorio'
                },
                ID_Automovil: {
                    bsonType: 'int',
                    description: 'El parametro ID_Automovil es obligatorio'
                },
                Cantidad_Disponible: {
                    bsonType: 'number',
                    description: 'El parametro Cantidad_Disponible es obligatorio'
                }
            },
        },
    }
});
use("db_alquileres_mongo");
db.sucursal.insertMany([
    { 
        ID: 1, 
        Nombre: 'Sucursal A', 
        Direccion: 'Calle Principal 123', 
        Telefono: '1111111111',
        ID_Sucursal : 1,
        ID_Automovil: 2,
        Cantidad_Disponible : 10
    },
    { 
        ID: 2, 
        Nombre: 'Sucursal B', 
        Direccion: 'Avenida Central 456', 
        Telefono: '2222222222',
        ID_Sucursal : 2,
        ID_Automovil: 1,
        Cantidad_Disponible : 20
    },
    { 
        ID: 3, 
        Nombre: 'Sucursal C',
        Direccion: 'Plaza Principal 789', 
        Telefono: '3333333333',
        ID_Sucursal : 3,
        ID_Automovil: 3,
        Cantidad_Disponible : 5
    },
    { 
        ID: 4, 
        Nombre: 'Sucursal D', 
        Direccion: 'Ruta Secundaria 101', 
        Telefono: '4444444444',
        ID_Sucursal : 4,
        ID_Automovil: 4,
        Cantidad_Disponible : 6
    },
    { 
        ID: 5, 
        Nombre: 'Sucursal E', 
        Direccion: 'Carretera Principal 987', 
        Telefono: '5555555555',
        ID_Sucursal : 5,
        ID_Automovil: 5,
        Cantidad_Disponible : 10
    }
]);

// Colección: Contrato (fusion de Alquiler y Reserva)
use("db_alquileres_mongo");
db.createCollection('contrato', {
    capped: true,
    size: 8000,
    max: 15,
    validator: {
        $jsonSchema: {
            bsonType: 'object',
            additionalProperties: false,
            required: ['ID', 'ID_Cliente', 'ID_Automovil','Fecha_Inicio', 'Fecha_Fin', 'Estado', 'Tipo'],
            properties: {
                _id: {
                    bsonType: 'objectId',
                    description: 'El parametro _id es obligatorio'
                },
                ID: {
                    bsonType: 'int',
                    description: 'El parametro ID es obligatorio'
                },
                ID_Cliente: {
                    bsonType: 'number',
                    description: 'El parametro ID_Cliente es obligatorio'
                },
                ID_Automovil: {
                    bsonType: 'number',
                    description: 'El parametro ID_Automovil es obligatorio'
                },
                Fecha_Inicio: {
                    bsonType: 'date',
                    description: 'El parametro Fecha_Inicio es obligatorio'
                },
                Fecha_Fin: {
                    bsonType: 'date',
                    description: 'El parametro Fecha_Fin es obligatorio'
                },
                Estado: {
                    bsonType: 'string',
                    description: 'El parametro Estado es obligatorio'
                },
                Tipo: {
                    bsonType: 'string',
                    description: 'El parametro Tipo es obligatorio'
                },
                Costo_Total: {
                    bsonType: 'number',
                    description: 'El parametro Costo_Total no es obligatorio pero si lo ingresa de ser un numero'
                }
            },
        },
    }
});
use("db_alquileres_mongo");
db.contrato.insertMany([
    { 
        ID: 1, 
        ID_Cliente: 1, 
        ID_Automovil: 3, 
        Fecha_Inicio: ISODate('2023-07-01'), 
        Fecha_Fin: ISODate('2023-07-05'), 
        Estado: 'Activo', 
        Tipo: 'Alquiler',
        Costo_Total: 240.00
    },
    {
        ID: 2, 
        ID_Cliente: 2, 
        ID_Automovil: 4, 
        Fecha_Inicio: ISODate('2023-07-02'), 
        Fecha_Fin: ISODate('2023-07-07'), 
        Estado: 'Disponible', 
        Tipo: 'Alquiler',
        Costo_Total: 275.00
    },
    { 
        ID: 3, 
        ID_Cliente: 3, 
        ID_Automovil: 1, 
        Fecha_Inicio: ISODate('2023-07-03'), 
        Fecha_Fin: ISODate('2023-07-06'), 
        Estado: 'Activo', 
        Tipo: 'Alquiler',
        Costo_Total: 150.00
    },
    { 
        ID: 4, 
        ID_Cliente: 4, 
        ID_Automovil: 5, 
        Fecha_Inicio: ISODate('2023-07-04'), 
        Fecha_Fin: ISODate('2023-07-08'), 
        Estado: 'Activo', 
        Tipo: 'Alquiler',
        Costo_Total: 192.00
    },
    { 
        ID: 5, 
        ID_Cliente: 5, 
        ID_Automovil: 2, 
        Fecha_Inicio: ISODate('2023-07-05'), 
        Fecha_Fin: ISODate('2023-07-09'), 
        Estado: 'Disponible', 
        Tipo: 'Alquiler',
        Costo_Total: 225.00
    },
    { 
        ID: 6, 
        ID_Cliente: 2, 
        ID_Automovil: 1, 
        Fecha_Inicio: ISODate('2023-07-06'), 
        Fecha_Fin: ISODate('2023-07-10'), 
        Estado: 'Pendiente', 
        Tipo: 'Reserva'
    },
    { 
        ID: 7, 
        ID_Cliente: 3, 
        ID_Automovil: 3, 
        Fecha_Inicio: ISODate('2023-07-07'), 
        Fecha_Fin: ISODate('2023-07-12'), 
        Estado: 'Pendiente', 
        Tipo: 'Reserva'
    },
    { 
        ID: 8, 
        ID_Cliente: 4, 
        ID_Automovil: 2, 
        Fecha_Inicio: ISODate('2023-07-08'), 
        Fecha_Fin: ISODate('2023-07-14'), 
        Estado: 'Pendiente', 
        Tipo: 'Reserva'
    },
    { 
        ID: 9, 
        ID_Cliente: 5, 
        ID_Automovil: 4, 
        Fecha_Inicio: ISODate('2023-07-09'), 
        Fecha_Fin: ISODate('2023-07-15'), 
        Estado: 'Pendiente', 
        Tipo: 'Reserva'
    },
    { 
        ID: 10, 
        ID_Cliente: 1, 
        ID_Automovil: 5, 
        Fecha_Inicio: ISODate('2023-07-10'), 
        Fecha_Fin: ISODate('2023-07-16'), 
        Estado: 'Pendiente', 
        Tipo: 'Reserva'
    }
]);

//Registro(Union de ambos registros)
use("db_alquileres_mongo");
db.createCollection('registro', {
    capped: true,
    size: 8000,
    max: 15,
    validator: {
        $jsonSchema: {
            bsonType: 'object',
            additionalProperties: false,
            required: ['ID', 'ID_Contrato', 'ID_Empleado', 'Tipo_Registro'],
            properties: {
                _id: {
                    bsonType: 'objectId',
                    description: 'El parametro _id es obligatorio'
                },
                ID: {
                    bsonType: 'int',
                    description: 'El parametro ID es obligatorio'
                },
                ID_Contrato: {
                    bsonType: 'int',
                    description: 'El parametro ID_Contrato es obligatorio'
                },
                ID_Empleado: {
                    bsonType: 'int',
                    description: 'El parametro ID_Empleado es obligatorio'
                },
                Tipo_Registro: {
                    bsonType: 'string',
                    description: 'El parametro Tipo_Registro es obligatorio'
                },
                Fecha_Entrega: {
                    bsonType: 'date',
                    description: 'El parametro Fecha_Entrega es obligatorio'
                },
                Combustible_Entregado: {
                    bsonType: 'number',
                    description: 'El parametro Combustible_Entregado es obligatorio'
                },
                Kilometraje_Entregado: {
                    bsonType: 'number',
                    description: 'El parametro Kilometraje_Entregado es opcional'
                },
                Fecha_Devolucion: {
                    bsonType: 'date',
                    description: 'El parametro Fecha_Devolucion es opcional'
                },
                Combustible_Devuelto: {
                    bsonType: 'number',
                    description: 'El parametro Combustible_Devuelto es opcional'
                },
                Kilometraje_Devuelto: {
                    bsonType: 'number',
                    description: 'El parametro Kilometraje_Devuelto es opcional'
                },
                Monto_Adicional: {
                    bsonType: 'number',
                    description: 'El parametro Monto_Adicional es obligatorio'
                }
            }
        }
    }
});
use("db_alquileres_mongo");
db.registro.insertMany([
    { 
        ID: 1, 
        ID_Contrato: 1, 
        ID_Empleado: 3, 
        Tipo_Registro: 'Entrega',
        Fecha_Entrega: ISODate('2023-07-05'), 
        Combustible_Entregado: 40.00, 
        Kilometraje_Entregado: 2000,
    },
    { 
        ID: 2, 
        ID_Contrato: 2, 
        ID_Empleado: 4, 
        Tipo_Registro: 'Entrega',
        Fecha_Entrega: ISODate('2023-07-07'), 
        Combustible_Entregado: 30.00, 
        Kilometraje_Entregado: 1800, 
    },
    { 
        ID: 3, 
        ID_Contrato: 3, 
        ID_Empleado: 1, 
        Tipo_Registro: 'Entrega',
        Fecha_Entrega: ISODate('2023-07-06'), 
        Combustible_Entregado: 45.00, 
        Kilometraje_Entregado: 2200 
    },
    { 
        ID: 4, 
        ID_Contrato: 4, 
        ID_Empleado: 5, 
        Tipo_Registro: 'Entrega',
        Fecha_Entrega: ISODate('2023-07-08'), 
        Combustible_Entregado: 50.00, 
        Kilometraje_Entregado: 2400
    },
    { 
        ID: 5, 
        ID_Contrato: 5, 
        ID_Empleado: 2, 
        Tipo_Registro: 'Entrega',
        Fecha_Entrega: ISODate('2023-07-09'), 
        Combustible_Entregado: 35.00, 
        Kilometraje_Entregado: 1900
    },
    { 
        ID: 6, 
        ID_Contrato: 1, 
        ID_Empleado: 3, 
        Tipo_Registro: 'Devolucion',
        Fecha_Devolucion: ISODate('2023-07-10'), 
        Combustible_Devuelto: 10.00,
        Kilometraje_Devuelto: 2500,
        Monto_Adicional: 20.00
    },
    { 
        ID: 7, 
        ID_Contrato: 2, 
        ID_Empleado: 4, 
        Tipo_Registro: 'Devolucion',
        Fecha_Devolucion: ISODate('2023-07-12'), 
        Combustible_Devuelto: 15.00,
        Kilometraje_Devuelto: 2100,
        Monto_Adicional: 15.00
    },
    { 
        ID: 8, 
        ID_Contrato: 3, 
        ID_Empleado: 1, 
        Tipo_Registro: 'Devolucion',
        Fecha_Devolucion: ISODate('2023-07-11'), 
        Combustible_Devuelto: 20.00,
        Kilometraje_Devuelto: 2300,
        Monto_Adicional: 25.00
    },
    { 
        ID: 9, 
        ID_Contrato: 4, 
        ID_Empleado: 5, 
        Tipo_Registro: 'Devolucion',
        Fecha_Devolucion: ISODate('2023-07-13'), 
        Combustible_Devuelto: 25.00, 
        Kilometraje_Devuelto: 2600,
        Monto_Adicional: 30.00
    },
    { 
        ID: 10, 
        ID_Contrato: 5, 
        ID_Empleado: 2, 
        Tipo_Registro: 'Devolucion',
        Fecha_Devolucion: ISODate('2023-07-14'), 
        Combustible_Devuelto: 18.00, 
        Kilometraje_Devuelto: 2000,
        Monto_Adicional: 12.00
    }
]);

//QUERYS MONGODB

// use("db_campus_alquiler");
// db.getCollection('Contrato').aggregate([
//     // Etapa 1: Filtrar los documentos donde el campo 'ID' sea igual a 1
//     {
//         $match: { ID: { $eq: 1 } }
//     },
//     // Etapa 2: Realizar una unión con la colección 'Cliente'
//     {
//         $lookup: {
//             from: 'Cliente', // Colección a unir
//             localField: 'ID_Cliente', // Campo local para la unión (en 'Contrato')
//             foreignField: 'ID', // Campo extranjero para la unión (en 'Cliente')
//             as: 'fk' // Nombre del nuevo campo que contendrá los resultados de la unión
//         }
//     },
//     // Etapa 3: Desconstruir el campo 'fk' que contiene los resultados de la unión
//     {
//         $unwind: '$fk'
//     },
//     // Etapa 4: Proyectar los campos para el resultado final
//     {
//         $project: {
//             Fecha_Fin: 0, // Excluir el campo 'Fecha_Fin' del resultado final
//             Fecha_Inicio: 0, // Excluir el campo 'Fecha_Inicio' del resultado final
//             _id: 0, // Excluir el campo '_id' del resultado final
//             'fk._id': 0 // Excluir el campo '_id' del array 'fk' que contiene los datos del cliente
//         }
//     },
//     // Etapa 5: Agrupar los documentos resultantes por el campo 'ID_Automovil'
//     {
//         $group: {
//             _id: '$ID_Automovil', // Campo por el que se agrupa
//             ID_Cliente: { $first: '$ID_Cliente' }, // Seleccionar el primer valor no nulo del campo 'ID_Cliente'
//             fk: { $push: '$fk' } // Crear un array con los documentos agrupados de 'Cliente'
//         }
//     }
// ]);


use("db_alquileres_mongo");
db.getCollection("contrato").aggregate([
    { 
        $match: { Estado: 'Activo' } 
    },

{
    $lookup: { // innerjoin en SQL
        from: "cliente", //desde: acá se coloca la tabla que deseo enlazar
        localField: "ID_Cliente", // el campo el cual es foraneo con la tabla que puse arriba que deseo enlazar
        foreignField: "ID", //el iD este caso de cliente
        as:"Alquiler_activo",
    }
},
{
    $unwind: "$Alquiler_activo"
    //Desestructura y me pone los datos en campos individuales, no en un array
},
{
    $project: { // $ project: sirve para omitir algunos campos que no quiero que me traiga en la solicitud
        _id: 0,
        Fecha_Inicio : 0,
        Fecha_Fin : 0,
        ID_Cliente :0,
        ID_Automovil : 0,
        "Alquiler_activo._id" : 0
    }
},
{
    $group: {
        _id: '$ID',
        contratos: {
            $push: '$$ROOT'
        }
    }
}
])

use("db_alquileres_mongo");
db.getCollection("contrato").aggregate([
    {
        $match:{Estado:"Pendiente"}
    },
    {
        $lookup: {
            from: "automovil", //Colección a la que se hace referencia para unir los datos
            localField: "ID_Automovil", // Campo en la colección actual que se utiliza como referencia
            foreignField: "ID", // Campo en la colección "cliente" que se usa para la unión
            as:"Alquiler_automovil",// Nombre del nuevo campo que contendrá los documentos unidos
        },
    },
    {
        $unwind: "$Alquiler_automovil" // no olvidar el $
    },
    {
        $project:{
            _id: 0,
            Fecha_Inicio : 0,
            Fecha_Fin : 0,
            ID_Cliente :0,
            ID_Automovil : 0,
            "Alquiler_automovil._id" : 0
        }
    },
    {
        $group:{
            _id: '$ID',
            contratos: {
            $push: '$$ROOT'
            }
        }
    }
])

use("db_alquileres_mongo");
db.getCollection("sucursal").find({},{Nombre:1,Cantidad_Disponible:1,_id:0})

use("db_alquileres_mongo");
db.getCollection("contrato").aggregate([
      {
        $lookup: {
          from: "cliente",
          localField: "ID_cliente",
          foreignField: "DNI",
          as: "Cliente_Info",
        },
      },
      {
        $match: {
          ID_cliente: 12345678,
        },
      },
      {
        $unwind: "$Cliente_Info",
      }
])